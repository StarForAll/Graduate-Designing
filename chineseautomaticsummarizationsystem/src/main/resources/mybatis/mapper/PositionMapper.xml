<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.ncu.dao.mapper.PositionMapper">


    <sql id="baseSql">
        id,
        position_name,
        remark,
        update_time,
        create_time
    </sql>
    <sql id="queryByPageWhere">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="queryDTO.positionName != null and queryDTO.positionName != ''">
                AND INSTR(position_name,#{queryDTO.positionName})
            </if>
        </trim>
    </sql>
    <sql id="orderByPage">
        <choose>
            <when test="queryDTO.orders !=null and queryDTO.orders.size()>0">
                order by
                <foreach collection="idList"  separator="," item="item">
                    ${item.column}
                    <choose>
                        <when test="item.asc">
                            asc
                        </when>
                        <otherwise>
                            desc
                        </otherwise>
                    </choose>
                </foreach>
                ,create_time desc
            </when>
            <otherwise>
                order by create_time desc
            </otherwise>
        </choose>

        LIMIT ${(queryDTO.pageNum - 1) * queryDTO.pageSize},#{queryDTO.pageSize}
    </sql>
    <update id="update">
        update position
        <set>
            <if test="positionName!=null and positionName !=''">
                position_name=#{positionName},
            </if>
            <if test="remark!=null and remark !=''">
                remark=#{remark},
            </if>
            <if test="updateTime!=null ">
                update_time=#{updateTime},
            </if>
        </set>
        where id=#{id}
    </update>
    <select id="selectCountByPage" resultType="integer">
        select count(*) from position
        <include refid="queryByPageWhere"/>
    </select>
    <select id="selectByPage" resultType="cn.edu.ncu.dao.entity.Position">
        SELECT
        <include refid="baseSql"></include>
        FROM
        position
        <include refid="queryByPageWhere"/>
        <include refid="orderByPage"/>
    </select>

    <select id="selectRelation" resultType="cn.edu.ncu.pojo.dto.PositionRelationResultDTO">
        SELECT
        job.position_name,
        rel.position_id,
        rel.employee_id,
        rel.update_time,
        rel.create_time
        FROM
        position_relation rel
        LEFT JOIN position job ON rel.position_id = job.id
        <where>
            <if test="positionId != null">
                AND rel.position_id = #{positionId}
            </if>
            <if test="employeeId != null">
                AND rel.employee_id = #{employeeId}
            </if>
        </where>
    </select>

    <select id="selectEmployeesRelation" resultType="cn.edu.ncu.pojo.dto.PositionRelationResultDTO">
        SELECT
        job.position_name,
        rel.position_id,
        rel.employee_id,
        rel.update_time,
        rel.create_time
        FROM
        position_relation rel
        LEFT JOIN position job ON rel.position_id = job.id
        <where>
            rel.employee_id IN
            <foreach collection="employeeIdList" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </where>
    </select>

    <insert id="insertBatchRelation" parameterType="java.util.List">
        INSERT INTO position_relation (id,position_id,employee_id,create_time,update_time) VALUES
        <foreach collection="positionRelations" item="item" separator=",">
            (#{item.id},#{item.positionId},#{item.employeeId},#{item.createTime},#{item.updateTime})
        </foreach>
    </insert>


    <delete id="deleteRelationByEmployeeId">
        DELETE FROM position_relation WHERE employee_id = #{employeeId}
    </delete>

</mapper>